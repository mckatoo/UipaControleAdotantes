/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uipacontroleadotantes.gui.adotantes;

import cep.CEPBean;
import cep.Cep;
import java.awt.Color;
import java.awt.Component;
import java.sql.SQLException;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import uipacontroleadotantes.banco.adotantes.AdotantesBean;
import uipacontroleadotantes.banco.adotantes.AdotantesDAO;
import uipacontroleadotantes.gui.Loading;
import uipacontroleadotantes.uteis.Validador;

/**
 *
 * @author mckatoo
 */
public class AdotantesCadastro extends javax.swing.JInternalFrame {

    /**
     * Creates new form AdotantesCadastro
     */
    AdotantesTableModel model = new AdotantesTableModel();

    public AdotantesCadastro() {
        initComponents();
        limparCampos();
        setFrameIcon(new ImageIcon(this.getClass().getResource("/uipacontroleadotantes/assets/team-24x24.png")));
        tblAdotantes.setModel(model);
        preencherTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbUF = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCPF = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cbSexo = new javax.swing.JComboBox<>();
        txtRG = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtCEP = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        btnCadastrar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdotantes = new javax.swing.JTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Cadastro de Adotantes");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Nome:");

        txtNome.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtNome.setMinimumSize(new java.awt.Dimension(2, 250));
        txtNome.setName(""); // NOI18N
        txtNome.setNextFocusableComponent(txtTelefone);
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });

        jLabel2.setText("Telefone:");

        txtTelefone.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtTelefone.setName("txtTelefone"); // NOI18N
        txtTelefone.setNextFocusableComponent(txtCelular);

        jLabel3.setText("Celular:");

        txtCelular.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtCelular.setName("txtCelular"); // NOI18N
        txtCelular.setNextFocusableComponent(txtCEP);

        jLabel12.setText("CEP:");

        jLabel4.setText("Endereço:");

        txtEndereco.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtEndereco.setMinimumSize(new java.awt.Dimension(2, 250));
        txtEndereco.setName(""); // NOI18N
        txtEndereco.setNextFocusableComponent(txtBairro);

        jLabel5.setText("Bairro:");

        txtBairro.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtBairro.setName(""); // NOI18N
        txtBairro.setNextFocusableComponent(txtCidade);

        jLabel6.setText("Cidade:");

        txtCidade.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtCidade.setName(""); // NOI18N
        txtCidade.setNextFocusableComponent(cbUF);

        jLabel7.setText("Estado:");

        cbUF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um Estado", "AC - Acre", "AL - Alagoas", "AP - Amapá", "AM - Amazonas", "BA - Bahia", "CE - Ceará", "DF - Distrito Federal", "ES - Espírito Santo", "GO - Goiás", "MA - Maranhão", "MT - Mato Grosso", "MS - Mato Grosso do Sul", "MG - Minas Gerais", "PA - Pará", "PB - Paraíba", "PR - Paraná", "PE - Pernambuco", "PI - Piauí", "RJ - Rio de Janeiro", "RN - Rio Grande do Norte", "RS - Rio Grande do Sul", "RO - Rondônia", "RR - Roraima", "SC - Santa Catarina", "SP - São Paulo", "SE - Sergipe", "TO - Tocantins" }));
        cbUF.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        cbUF.setName(""); // NOI18N
        cbUF.setNextFocusableComponent(txtRG);

        jLabel8.setText("RG:");

        jLabel9.setText("CPF:");

        txtCPF.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtCPF.setName(""); // NOI18N
        txtCPF.setNextFocusableComponent(cbSexo);

        jLabel10.setText("Sexo:");

        jLabel11.setText("E-mail:");

        cbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um Sexo", "M - Masculino", "F - Feminino" }));
        cbSexo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        cbSexo.setName("cbSexo"); // NOI18N
        cbSexo.setNextFocusableComponent(txtEmail);

        txtRG.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtRG.setName(""); // NOI18N
        txtRG.setNextFocusableComponent(txtCPF);

        txtEmail.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtEmail.setName("txtEmail"); // NOI18N
        txtEmail.setNextFocusableComponent(btnCadastrar);
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });

        txtCEP.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("00000000"))));
        txtCEP.setNextFocusableComponent(txtEndereco);
        txtCEP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCEPFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbUF, 0, 1, Short.MAX_VALUE)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbSexo, 0, 195, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCEP, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBairro, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtRG))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(txtCidade)))
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbUF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        btnCadastrar.setBackground(new java.awt.Color(255, 51, 102));
        btnCadastrar.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        btnCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btnCadastrar.setNextFocusableComponent(btnLimpar);
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnLimpar.setBackground(new java.awt.Color(255, 51, 102));
        btnLimpar.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        btnLimpar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpar.setText("Limpar");
        btnLimpar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnAtualizar.setBackground(new java.awt.Color(255, 51, 102));
        btnAtualizar.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        btnAtualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btnAtualizar.setEnabled(false);
        btnAtualizar.setNextFocusableComponent(btnLimpar);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnPesquisar.setBackground(new java.awt.Color(255, 51, 102));
        btnPesquisar.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        btnPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btnPesquisar.setNextFocusableComponent(btnLimpar);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(204, 0, 51));
        btnExcluir.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setText("Excluir");
        btnExcluir.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btnExcluir.setEnabled(false);
        btnExcluir.setNextFocusableComponent(btnLimpar);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addContainerGap())
        );

        tblAdotantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblAdotantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAdotantesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAdotantes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailKeyReleased

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        if (!Validador.emailValido(txtEmail.getText())) {
            JOptionPane.showMessageDialog(null, "EMAIL INVÁLIDO!");
            txtEmail.setBackground(Color.red);
        } else {
            txtEmail.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparCampos();
        preencherTable();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        if (verificarCamposObrigatorios()) {
            AdotantesBean adotanteBean = new AdotantesBean();
            adotanteBean.setNome(txtNome.getText());
            adotanteBean.setTelefone(txtTelefone.getText());
            adotanteBean.setCelular(txtCelular.getText());
            adotanteBean.setCep(txtCEP.getText());
            adotanteBean.setEndereco(txtEndereco.getText());
            adotanteBean.setBairro(txtBairro.getText());
            adotanteBean.setCidade(txtCidade.getText());
            if (cbUF.getSelectedIndex() > 0) {
                adotanteBean.setUf(cbUF.getSelectedItem().toString().split(" - ")[0]);
            }
            adotanteBean.setCpf(txtCPF.getText());
            adotanteBean.setRg(txtRG.getText());
            if (cbSexo.getSelectedIndex() > 0) {
                char[] sexo = cbSexo.getSelectedItem().toString().split("")[0].toCharArray();
                adotanteBean.setSexo(sexo);
            }
            adotanteBean.setEmail(txtEmail.getText());

            AdotantesDAO adotantesDAO = new AdotantesDAO();

            try {
                int codAdotante = adotantesDAO.inserir(adotanteBean);
                adotanteBean.setCodAdotante(codAdotante);
            } catch (SQLException ex) {
                Logger.getLogger(AdotantesCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
            limparCampos();
            model.addRow(adotanteBean);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        preencherTable();
    }//GEN-LAST:event_formComponentShown

    private void tblAdotantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAdotantesMouseClicked
        if (evt.getClickCount() == 2) {
            int linha = tblAdotantes.getSelectedRow();
            limparCampos();
            txtNome.setText(tblAdotantes.getValueAt(linha, 1).toString());
            txtTelefone.setText(tblAdotantes.getValueAt(linha, 2).toString());
            txtCelular.setText(tblAdotantes.getValueAt(linha, 3).toString());
            txtCEP.setText(tblAdotantes.getValueAt(linha, 4).toString());
            txtEndereco.setText(tblAdotantes.getValueAt(linha, 5).toString());
            txtBairro.setText(tblAdotantes.getValueAt(linha, 6).toString());
            txtCidade.setText(tblAdotantes.getValueAt(linha, 7).toString());
            if (tblAdotantes.getValueAt(linha, 8) != null) {
                for (int i = 0; i < cbUF.getItemCount(); i++) {
                    if (cbUF.getItemAt(i).split(" - ")[0].equals(tblAdotantes.getValueAt(linha, 8).toString())) {
                        cbUF.setSelectedIndex(i);
                    }
                }
            }
            txtCPF.setText(tblAdotantes.getValueAt(linha, 9).toString());
            txtRG.setText(tblAdotantes.getValueAt(linha, 10).toString());
            if (tblAdotantes.getValueAt(linha, 11) != null) {
                for (int i = 0; i < cbSexo.getItemCount(); i++) {
                    if (cbSexo.getItemAt(i).split(" - ")[0].equals(tblAdotantes.getValueAt(linha, 11).toString())) {
                        cbSexo.setSelectedIndex(i);
                    }
                }
            }
            txtEmail.setText(tblAdotantes.getValueAt(linha, 12).toString());
            txtNome.requestFocus();
            btnAtualizar.setEnabled(true);
            btnExcluir.setEnabled(true);
            btnCadastrar.setEnabled(false);
        }
    }//GEN-LAST:event_tblAdotantesMouseClicked

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased
        txtNome.setText(txtNome.getText().toUpperCase());
    }//GEN-LAST:event_txtNomeKeyReleased

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        if (verificarCamposObrigatorios()) {
            AdotantesBean adotanteBean = new AdotantesBean();
            int linha = tblAdotantes.getSelectedRow();
            if (linha < 0) {
                return;
            }
            int codAdotante = Integer.parseInt(tblAdotantes.getValueAt(linha, 0).toString());
            adotanteBean.setCodAdotante(codAdotante);
            adotanteBean.setNome(txtNome.getText());
            adotanteBean.setTelefone(txtTelefone.getText());
            adotanteBean.setCelular(txtCelular.getText());
            adotanteBean.setCep(txtCEP.getText());
            adotanteBean.setEndereco(txtEndereco.getText());
            adotanteBean.setBairro(txtBairro.getText());
            adotanteBean.setCidade(txtCidade.getText());
            if (cbUF.getSelectedIndex() > 0) {
                adotanteBean.setUf(cbUF.getSelectedItem().toString().split(" - ")[0]);
            }
            adotanteBean.setCpf(txtCPF.getText());
            adotanteBean.setRg(txtRG.getText());
            if (cbSexo.getSelectedIndex() > 0) {
                char[] sexo = cbSexo.getSelectedItem().toString().split("")[0].toCharArray();
                adotanteBean.setSexo(sexo);
            }
            adotanteBean.setEmail(txtEmail.getText());

            AdotantesDAO adotantesDAO = new AdotantesDAO();

            try {
                adotantesDAO.alterar(adotanteBean);
            } catch (SQLException ex) {
                Logger.getLogger(AdotantesCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }

            model.setValueAt(String.valueOf(codAdotante), linha, 0);
            model.setValueAt(txtNome.getText(), linha, 1);
            model.setValueAt(txtTelefone.getText(), linha, 2);
            model.setValueAt(txtCelular.getText(), linha, 3);
            model.setValueAt(txtCEP.getText(), linha, 4);
            model.setValueAt(txtEndereco.getText(), linha, 5);
            model.setValueAt(txtBairro.getText(), linha, 6);
            model.setValueAt(txtCidade.getText(), linha, 7);
            model.setValueAt(cbUF.getSelectedItem().toString().split(" - ")[0], linha, 8);
            model.setValueAt(txtCPF.getText(), linha, 9);
            model.setValueAt(txtRG.getText(), linha, 10);
            model.setValueAt(cbSexo.getSelectedItem().toString().split(" - ")[0], linha, 11);
            model.setValueAt(txtEmail.getText(), linha, 12);

            limparCampos();
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        AdotantesDAO adotantesDAO = new AdotantesDAO();
        limparModel();
        if (!txtNome.getText().equals("")) {
            adotantesDAO.pesquisarPorNome(txtNome.getText()).forEach((adotantes) -> {
                model.addRow(adotantes);
            });
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linha = tblAdotantes.getSelectedRow();
        int codAdotante = Integer.parseInt(tblAdotantes.getValueAt(linha, 0).toString());
        String nome = tblAdotantes.getValueAt(linha, 1).toString();
        if (codAdotante > 0) {
            int permissao = JOptionPane.showConfirmDialog(null, "TEM CERTEZA QUE DESEJA APAGAR O ADOTANTE " + nome + "?", "EXCLUIR?", JOptionPane.YES_NO_OPTION);
            if (permissao == 0) {
                AdotantesDAO adotantesDAO = new AdotantesDAO();
                try {
                    adotantesDAO.excluir(codAdotante);
                    model.removeRow(linha);
                } catch (SQLException ex) {
                    Logger.getLogger(AdotantesCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            limparCampos();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtCEPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCEPFocusLost
        if (txtCEP.isValid() || !txtCEP.getText().isEmpty()) {
            final Loading loading = new Loading();

            Future<CEPBean> futureCep = Cep.consultaCEPasync(txtCEP.getText());
            CompletableFuture.runAsync(() -> {
                try {
                    CEPBean cep = futureCep.get(10, TimeUnit.SECONDS);
                    txtBairro.setText(cep.getBairro());
                    txtCidade.setText(cep.getCidade());
                    if (cep.getUf() != null) {
                        for (int i = 0; i < cbUF.getItemCount(); i++) {
                            if (cbUF.getItemAt(i).split(" - ")[0].equals(cep.getUf())) {
                                cbUF.setSelectedIndex(i);
                            }
                        }
                    }
                    txtEndereco.setText(cep.getEndereco() + ", ");
                    txtEndereco.requestFocus();
                } catch (InterruptedException | ExecutionException | TimeoutException ex) {
                    Logger.getLogger(AdotantesCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            loading.dispose();
            });
        }
    }//GEN-LAST:event_txtCEPFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox<String> cbSexo;
    private javax.swing.JComboBox<String> cbUF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAdotantes;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRG;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        Component[] cmps = jPanel1.getComponents();
        for (Component c : cmps) {
            if (c instanceof JTextField) {
                ((JTextField) c).setText("");
            }
            if (c instanceof JFormattedTextField) {
                ((JFormattedTextField) c).setText(null);
            }
            if (c instanceof JComboBox) {
                ((JComboBox) c).setSelectedIndex(0);
            }
        }
        btnCadastrar.setEnabled(true);
        btnAtualizar.setEnabled(false);
        btnExcluir.setEnabled(false);
    }

    private boolean verificarCamposObrigatorios() {
        if (txtNome.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "CAMPO NOME VAZIO.");
            txtNome.requestFocus();
            return false;
        }
        if (txtEndereco.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "CAMPO ENDEREÇO VAZIO.");
            txtEndereco.requestFocus();
            return false;
        }
        if (txtBairro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "CAMPO BAIRRO VAZIO.");
            txtBairro.requestFocus();
            return false;
        }
        if (txtCidade.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "CAMPO CIDADE VAZIO.");
            txtCidade.requestFocus();
            return false;
        }
        if (cbUF.getSelectedIndex() < 1) {
            JOptionPane.showMessageDialog(null, "CAMPO ESTADO VAZIO.");
            cbUF.requestFocus();
            return false;
        }
        if (txtRG.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "CAMPO RG VAZIO.");
            txtRG.requestFocus();
            return false;
        }
        if (txtCPF.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "CAMPO CPF VAZIO.");
            txtCPF.requestFocus();
            return false;
        }
        return true;
    }

    private void preencherTable() {
        AdotantesDAO adotantesDAO = new AdotantesDAO();
        limparModel();
        try {
            for (AdotantesBean cliente : adotantesDAO.listarTodos()) {
                model.addRow(cliente);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdotantesCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limparModel() {
        for (int i = model.getRowCount() - 1; i > -1; i--) {
            model.removeRow(i);
        }
    }
}
